
FUNC void SyncCBS(void)
{   
    if(((_RDWORD(0x4000C040) >> 2) & 1) == ((_RDWORD(0x4000C000) >> 1) & 1))
    {
        if((_RDWORD(0x4000C000) >> 1) & 1)
        {
            _WDWORD(0x4000c000, _RDWORD(0x4000C000) ^ 0x2);
            _WDWORD(0x40000008, 0x2); // Reset CPU
        }
        else
        {
            _WDWORD(0x4000c000, _RDWORD(0x4000C000) | 0x2);
            _WDWORD(0x40000008, 0x2); // Reset CPU
        }
    }    
}

FUNC void UnlockReg(void)
{
    do
    {
        // Unlock register
        _WDWORD(0x40000100, 0x59);
        _WDWORD(0x40000100, 0x16);
        _WDWORD(0x40000100, 0x88);
    }while(!_RDWORD(0x40000100));
}

FUNC void InitFMC(void)
{
    _WDWORD(0x4000C000, 0x7d);
}

FUNC void Erase(unsigned int u32Addr)
{
    _WDWORD(0x4000c004, u32Addr);
    _WDWORD(0x4000c00c, 0x22);
    _WDWORD(0x4000c010, 1);
    
    while((_RDWORD(0x4000c010) & 1));
}

FUNC void ProgFlash(unsigned int u32Addr, unsigned int u32Data)
{
    _WDWORD(0x4000c004, u32Addr);
    _WDWORD(0x4000c008, u32Data);
    _WDWORD(0x4000c00c, 0x21);
    _WDWORD(0x4000c010, 1);
    
    while((_RDWORD(0x4000c010) & 1));
}

FUNC unsigned int ReadFlash(unsigned int u32Addr)
{
    _WDWORD(0x4000c004, u32Addr);
    _WDWORD(0x4000c008, 0x0);
    _WDWORD(0x4000c00c, 0x0);
    _WDWORD(0x4000c010, 1);
    
    while((_RDWORD(0x4000c010) & 1));
    
    return _RDWORD(0x4000c008);
}

FUNC void SetVecMap(unsigned int u32Addr)
{
    _WDWORD(0x4000c004, u32Addr);
    _WDWORD(0x4000c00c, 0x2e);
    _WDWORD(0x4000c010, 1);
    
    while((_RDWORD(0x4000c010) & 1));
}

FUNC void Halt(void)
{
    while(1);
}

FUNC void Execute_ChipReset(void)
{
    _WDWORD(0x40000008, 0x1);
}

UnlockReg();
InitFMC();

//    Erase(0x300000);
//    //ProgFlash(0x300000, 0xffffff3f);
//    ProgFlash(0x30000C, 0x5);
////    Execute_ChipReset();

//SetVecMap(0x00010000);
SetVecMap(0x00000000);
RESET;

//Halt();

printf("ISPCON = 0x%08x, ISPSTA = 0x%08x\n", _RDWORD(0x4000C000), _RDWORD(0x4000c040));
